#Сохранение модели в файл
model_json = model.to_json()
json_file = open("cifar-10_model_2-epoch.json", "w")
json_file.write(model_json)
json_file.close()
model.save_weights("cifar-10_model_2-epoch.h5")

################################################
#Загрузка и компиляция модели

import numpy as np
from keras.utils import np_utils
from keras.models import model_from_json
from keras.preprocessing import image
import matplotlib.pyplot as plt
%matplotlib inline

json_file = open("*.json", "r")
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)
loaded_model.load_weights(".h5")

#Компиляция
loaded_model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

######################################################
#Создание меток класса

classes=['самолёт', 'автомобиль', 'птица', 'кот', 'олень', 'собака', 'лягушка', 'лошадь', 'корабль', 'грузовик']

######################################################
#загрузка и отображение изображения для распознавания

from keras.preprocessing import image
import matplotlib.pyplot as plt
%matplotlib inline

img_path = 'do-kakogo-vozrasta-rastut-domashnie-koshki-7.jpeg'
img = image.load_img(img_path, target_size=(32, 32))
plt.imshow(img)
plt.show()

#Распознание изображения находящегося в переменной img

import numpy as np

x = image.img_to_array(img)
x /= 255
x = np.expand_dims(x, axis=0)

#======================

prediction = loaded_model.predict(x)
prediction = numpy.argmax(prediction, axis=1)
print(classes[prediction[0]])
